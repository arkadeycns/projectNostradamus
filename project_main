{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/arkadey04/projectnostradamus?scriptVersionId=172852960\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"3066bbfe","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-04-19T11:51:22.945963Z","iopub.status.busy":"2024-04-19T11:51:22.945357Z","iopub.status.idle":"2024-04-19T11:51:24.012629Z","shell.execute_reply":"2024-04-19T11:51:24.011182Z"},"papermill":{"duration":1.076798,"end_time":"2024-04-19T11:51:24.015232","exception":false,"start_time":"2024-04-19T11:51:22.938434","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/car-prices-of-indian-markets/car data.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":2,"id":"a3b8843f","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:24.027173Z","iopub.status.busy":"2024-04-19T11:51:24.026633Z","iopub.status.idle":"2024-04-19T11:51:24.072288Z","shell.execute_reply":"2024-04-19T11:51:24.071045Z"},"papermill":{"duration":0.054583,"end_time":"2024-04-19T11:51:24.074899","exception":false,"start_time":"2024-04-19T11:51:24.020316","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Car_Name</th>\n","      <th>Year</th>\n","      <th>Selling_Price</th>\n","      <th>Present_Price</th>\n","      <th>Kms_Driven</th>\n","      <th>Fuel_Type</th>\n","      <th>Seller_Type</th>\n","      <th>Transmission</th>\n","      <th>Owner</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ritz</td>\n","      <td>2014</td>\n","      <td>3.35</td>\n","      <td>5.59</td>\n","      <td>27000</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>sx4</td>\n","      <td>2013</td>\n","      <td>4.75</td>\n","      <td>9.54</td>\n","      <td>43000</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ciaz</td>\n","      <td>2017</td>\n","      <td>7.25</td>\n","      <td>9.85</td>\n","      <td>6900</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>wagon r</td>\n","      <td>2011</td>\n","      <td>2.85</td>\n","      <td>4.15</td>\n","      <td>5200</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>swift</td>\n","      <td>2014</td>\n","      <td>4.60</td>\n","      <td>6.87</td>\n","      <td>42450</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>city</td>\n","      <td>2016</td>\n","      <td>9.50</td>\n","      <td>11.60</td>\n","      <td>33988</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>brio</td>\n","      <td>2015</td>\n","      <td>4.00</td>\n","      <td>5.90</td>\n","      <td>60000</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>city</td>\n","      <td>2009</td>\n","      <td>3.35</td>\n","      <td>11.00</td>\n","      <td>87934</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>299</th>\n","      <td>city</td>\n","      <td>2017</td>\n","      <td>11.50</td>\n","      <td>12.50</td>\n","      <td>9000</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>300</th>\n","      <td>brio</td>\n","      <td>2016</td>\n","      <td>5.30</td>\n","      <td>5.90</td>\n","      <td>5464</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>301 rows Ã— 9 columns</p>\n","</div>"],"text/plain":["    Car_Name  Year  Selling_Price  Present_Price  Kms_Driven Fuel_Type  \\\n","0       ritz  2014           3.35           5.59       27000    Petrol   \n","1        sx4  2013           4.75           9.54       43000    Diesel   \n","2       ciaz  2017           7.25           9.85        6900    Petrol   \n","3    wagon r  2011           2.85           4.15        5200    Petrol   \n","4      swift  2014           4.60           6.87       42450    Diesel   \n","..       ...   ...            ...            ...         ...       ...   \n","296     city  2016           9.50          11.60       33988    Diesel   \n","297     brio  2015           4.00           5.90       60000    Petrol   \n","298     city  2009           3.35          11.00       87934    Petrol   \n","299     city  2017          11.50          12.50        9000    Diesel   \n","300     brio  2016           5.30           5.90        5464    Petrol   \n","\n","    Seller_Type Transmission  Owner  \n","0        Dealer       Manual      0  \n","1        Dealer       Manual      0  \n","2        Dealer       Manual      0  \n","3        Dealer       Manual      0  \n","4        Dealer       Manual      0  \n","..          ...          ...    ...  \n","296      Dealer       Manual      0  \n","297      Dealer       Manual      0  \n","298      Dealer       Manual      0  \n","299      Dealer       Manual      0  \n","300      Dealer       Manual      0  \n","\n","[301 rows x 9 columns]"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["cars = pd.read_csv('/kaggle/input/car-prices-of-indian-markets/car data.csv')\n","cars"]},{"cell_type":"code","execution_count":3,"id":"0519aa00","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:24.087753Z","iopub.status.busy":"2024-04-19T11:51:24.087327Z","iopub.status.idle":"2024-04-19T11:51:24.100543Z","shell.execute_reply":"2024-04-19T11:51:24.099705Z"},"papermill":{"duration":0.023031,"end_time":"2024-04-19T11:51:24.103352","exception":false,"start_time":"2024-04-19T11:51:24.080321","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Car_Name         0\n","Year             0\n","Selling_Price    0\n","Present_Price    0\n","Kms_Driven       0\n","Fuel_Type        0\n","Seller_Type      0\n","Transmission     0\n","Owner            0\n","dtype: int64"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["cars.isna().sum()\n","#checking for missing value , if any"]},{"cell_type":"code","execution_count":4,"id":"ac928c81","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:24.115408Z","iopub.status.busy":"2024-04-19T11:51:24.115019Z","iopub.status.idle":"2024-04-19T11:51:24.130295Z","shell.execute_reply":"2024-04-19T11:51:24.129352Z"},"papermill":{"duration":0.024911,"end_time":"2024-04-19T11:51:24.133398","exception":false,"start_time":"2024-04-19T11:51:24.108487","status":"completed"},"tags":[]},"outputs":[],"source":["cars['Age'] = 2024 - cars['Year']\n","cars.drop('Year', axis = 1, inplace = True)\n","cars.drop(labels='Car_Name',axis= 1, inplace = True)\n","cars.rename(columns = {'Selling_Price':'Selling_Price(lacs)','Present_Price':'Present_Price(lacs)','Owner':'Past_Owners'},inplace = True)\n","#processing the data "]},{"cell_type":"code","execution_count":5,"id":"0c0ce83d","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:24.154312Z","iopub.status.busy":"2024-04-19T11:51:24.153282Z","iopub.status.idle":"2024-04-19T11:51:24.178481Z","shell.execute_reply":"2024-04-19T11:51:24.177318Z"},"papermill":{"duration":0.042499,"end_time":"2024-04-19T11:51:24.181114","exception":false,"start_time":"2024-04-19T11:51:24.138615","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Selling_Price(lacs)</th>\n","      <th>Present_Price(lacs)</th>\n","      <th>Kms_Driven</th>\n","      <th>Past_Owners</th>\n","      <th>Age</th>\n","      <th>Fuel_Type_Diesel</th>\n","      <th>Fuel_Type_Petrol</th>\n","      <th>Seller_Type_Individual</th>\n","      <th>Transmission_Manual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.35</td>\n","      <td>5.59</td>\n","      <td>27000</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.75</td>\n","      <td>9.54</td>\n","      <td>43000</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.25</td>\n","      <td>9.85</td>\n","      <td>6900</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.85</td>\n","      <td>4.15</td>\n","      <td>5200</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4.60</td>\n","      <td>6.87</td>\n","      <td>42450</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Selling_Price(lacs)  Present_Price(lacs)  Kms_Driven  Past_Owners  Age  \\\n","0                 3.35                 5.59       27000            0   10   \n","1                 4.75                 9.54       43000            0   11   \n","2                 7.25                 9.85        6900            0    7   \n","3                 2.85                 4.15        5200            0   13   \n","4                 4.60                 6.87       42450            0   10   \n","\n","   Fuel_Type_Diesel  Fuel_Type_Petrol  Seller_Type_Individual  \\\n","0                 0                 1                       0   \n","1                 1                 0                       0   \n","2                 0                 1                       0   \n","3                 0                 1                       0   \n","4                 1                 0                       0   \n","\n","   Transmission_Manual  \n","0                    1  \n","1                    1  \n","2                    1  \n","3                    1  \n","4                    1  "]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["cars = pd.get_dummies(data = cars,drop_first=True, dtype = 'int') \n","#handing categorical features\n","cars.head()"]},{"cell_type":"code","execution_count":6,"id":"370efbd6","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:24.193953Z","iopub.status.busy":"2024-04-19T11:51:24.193273Z","iopub.status.idle":"2024-04-19T11:51:24.199833Z","shell.execute_reply":"2024-04-19T11:51:24.198687Z"},"papermill":{"duration":0.015791,"end_time":"2024-04-19T11:51:24.202383","exception":false,"start_time":"2024-04-19T11:51:24.186592","status":"completed"},"tags":[]},"outputs":[],"source":["y = cars['Selling_Price(lacs)']\n","x = cars.drop('Selling_Price(lacs)', axis = 1)\n","#separating independent and dependent variable\n"]},{"cell_type":"code","execution_count":7,"id":"bffcf9ff","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:24.222863Z","iopub.status.busy":"2024-04-19T11:51:24.222426Z","iopub.status.idle":"2024-04-19T11:51:25.835083Z","shell.execute_reply":"2024-04-19T11:51:25.833751Z"},"papermill":{"duration":1.625865,"end_time":"2024-04-19T11:51:25.838721","exception":false,"start_time":"2024-04-19T11:51:24.212856","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.model_selection import train_test_split"]},{"cell_type":"code","execution_count":8,"id":"7b05757c","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:25.851467Z","iopub.status.busy":"2024-04-19T11:51:25.851083Z","iopub.status.idle":"2024-04-19T11:51:25.861026Z","shell.execute_reply":"2024-04-19T11:51:25.859752Z"},"papermill":{"duration":0.019306,"end_time":"2024-04-19T11:51:25.863445","exception":false,"start_time":"2024-04-19T11:51:25.844139","status":"completed"},"tags":[]},"outputs":[],"source":["X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=1)\n","#splitting test and train data \n"]},{"cell_type":"code","execution_count":9,"id":"8c3caa0f","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:25.876154Z","iopub.status.busy":"2024-04-19T11:51:25.875779Z","iopub.status.idle":"2024-04-19T11:51:26.022555Z","shell.execute_reply":"2024-04-19T11:51:26.021314Z"},"papermill":{"duration":0.15646,"end_time":"2024-04-19T11:51:26.025456","exception":false,"start_time":"2024-04-19T11:51:25.868996","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.linear_model import LinearRegression\n","model = LinearRegression()\n","model.fit(X_train, y_train)\n","p_train = model.predict(X_train)\n","p_test = model.predict(X_test)\n","# predictions"]},{"cell_type":"code","execution_count":10,"id":"a452c5e4","metadata":{"execution":{"iopub.execute_input":"2024-04-19T11:51:26.038374Z","iopub.status.busy":"2024-04-19T11:51:26.037974Z","iopub.status.idle":"2024-04-19T11:51:26.04851Z","shell.execute_reply":"2024-04-19T11:51:26.04739Z"},"papermill":{"duration":0.019732,"end_time":"2024-04-19T11:51:26.050823","exception":false,"start_time":"2024-04-19T11:51:26.031091","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Train R2-score : 0.88\n","Test R2-score : 0.86\n"]}],"source":["from sklearn.metrics import r2_score\n","\n","R2_train = []\n","R2_test = []\n","\n","R2_train_model = r2_score(y_train,p_train)\n","R2_train.append(round(R2_train_model,2))\n","\n","R2_test_model = r2_score(y_test,p_test)\n","R2_test.append(round(R2_test_model,2))\n","\n","print(\"Train R2-score :\",round(R2_train_model,2))\n","print(\"Test R2-score :\",round(R2_test_model,2))"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":4598425,"sourceId":7843228,"sourceType":"datasetVersion"}],"dockerImageVersionId":30664,"isGpuEnabled":false,"isInternetEnabled":false,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":7.038606,"end_time":"2024-04-19T11:51:26.676889","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-04-19T11:51:19.638283","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}